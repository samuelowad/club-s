// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "image.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ImageService } from "./image";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ImageResponse } from "./image";
import type { ImageRequest } from "./image";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ImageService
 */
export interface IImageServiceClient {
    /**
     * @generated from protobuf rpc: ProcessImage(ImageRequest) returns (ImageResponse);
     */
    processImage(input: ImageRequest, options?: RpcOptions): UnaryCall<ImageRequest, ImageResponse>;
}
/**
 * @generated from protobuf service ImageService
 */
export class ImageServiceClient implements IImageServiceClient, ServiceInfo {
    typeName = ImageService.typeName;
    methods = ImageService.methods;
    options = ImageService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ProcessImage(ImageRequest) returns (ImageResponse);
     */
    processImage(input: ImageRequest, options?: RpcOptions): UnaryCall<ImageRequest, ImageResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ImageRequest, ImageResponse>("unary", this._transport, method, opt, input);
    }
}
